/* FILE_ACCESS_2
* Author: T0164919
* Creation date: 7/30/2015
*/

IMPLEMENTATION FILE_ACCESS_2(max_rec)
REFINES FILE_ACCESS_1
IMPORTS
    BASIC_FILE_VAR(max_rec)
    
INVARIANT
    record = buf_vrb & 
    bfile = file_vrb
    
INITIALISATION
    updated := FALSE;
    name:=0;
    buffer:=file_vrb;
    bfile:=file_vrb;
    record:=buf_vrb/* neccessary modifications in order to pass typecheck */
    /* buffer,bfile := {},[]; *//*Simultaneous affectation is not implementable*/
    
    /*moved Definitions from PARTIAL_OBJECT (where these sets are effectively valued and passed as paramaters) because  code generator does not translates SET formal paramteres of a machine.*/
    
    /*Sets' definitions modified so that they start from 0 beacause of translator requirement:"Lower bound of array must be 0"*/
DEFINITIONS
    FIELD == (0..4);
    VALUE == (0..10000)
OPERATIONS    
    get_record(oo)=
    BEGIN
        /*corection name:=1 instead of 0 because 0 /: dom(file_vrb(N)) as requested in then PRECONDITION clause of READ_FILE*/
        name:=1;
        READ_FILE(name);
        updated:=FALSE
    END;
    
    put_buffer =
    BEGIN
        WRITE_FILE(name)
    END;
    
    oo<--create_record(vv)=
    BEGIN
        NEW_RECORD(vv);
        oo<--SIZE_FILE
    END;
    
    mod_buffer(oo,ii,vv)=
    BEGIN
        /*STR_BUFFER(ii,vv);
        No reference to STR_BUFFER anywhere else but this file
        */
        record(ii):=vv ;
        updated:=TRUE
    END;
    
    vv<--not_in_buffer(oo)=
    BEGIN
        vv:=bool(oo/=name)
    END;
    
    vv<--size_file=
    BEGIN
        vv<--SIZE_FILE
    END;
    
    vv<--val_buffer(oo,ii)=
    BEGIN
        vv:=buffer(oo)(ii)
    END    
END