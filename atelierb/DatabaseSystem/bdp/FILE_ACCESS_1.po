THEORY ProofList IS
_f(1) & _f(2) & _f(13) & _f(14) & _f(59) & WellDefinedness_val_buffer.3,(_f(54) => _f(62));
_f(1) & _f(2) & _f(13) & _f(14) & _f(59) & WellDefinedness_val_buffer.2,(_f(54) => _f(61));
_f(1) & _f(2) & _f(13) & _f(14) & _f(59) & WellDefinedness_val_buffer.1,(_f(54) => _f(60));
_f(1) & _f(2) & _f(13) & _f(14) & WellDefinedness_size_file.1,(_f(54) => _f(55));
_f(1) & _f(2) & _f(13) & _f(14) & _f(27) & WellDefinedness_create_record.1,(_f(54) => _f(55));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & WellDefinedness_get_record.2,(_f(54) => _f(57));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & WellDefinedness_get_record.1,(_f(54) => _f(56));
_f(1) & _f(2) & _f(13) & WellDefinednessInvariant.1,(_f(53) & _f(54) => _f(55));
_f(1) & _f(2) & _f(13) & _f(14) & _f(44) & val_buffer.2,(_f(6) => _f(45));
_f(1) & _f(2) & _f(13) & _f(14) & _f(41) & val_buffer.1,(_f(42) => _f(43));
_f(1) & _f(2) & _f(13) & _f(14) & _f(39) & size_file.1,(_f(6) => _f(40));
_f(1) & _f(2) & _f(13) & _f(14) & _f(35) & mod_buffer.3,(_f(6) & _f(21) => _f(38));
_f(1) & _f(2) & _f(13) & _f(14) & _f(35) & mod_buffer.2,(_f(6) & _f(11) => _f(37));
_f(1) & _f(2) & _f(13) & _f(14) & _f(35) & mod_buffer.1,(_f(6) & _f(18) => _f(36));
_f(1) & _f(2) & _f(13) & _f(14) & _f(33) & not_in_buffer.1,(_f(6) => _f(34));
_f(1) & _f(2) & _f(13) & _f(14) & _f(28) & create_record.3,(_f(6) => _f(31));
_f(1) & _f(2) & _f(13) & _f(14) & _f(28) & create_record.2,(_f(6) & _f(25) => _f(30));
_f(1) & _f(2) & _f(13) & _f(14) & _f(28) & create_record.1,(_f(6) & _f(9) => _f(29));
_f(1) & _f(2) & _f(13) & _f(14) & _f(23) & put_buffer.2,(_f(6) & _f(25) => _f(26));
_f(1) & _f(2) & _f(13) & _f(14) & _f(23) & put_buffer.1,(_f(6) & _f(9) => _f(24));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & get_record.5,(_f(6) & _f(21) => _f(22));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & get_record.4,(_f(6) & _f(11) => _f(20));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & get_record.3,(_f(6) & _f(18) => _f(19));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & get_record.2,(_f(6) & _f(9) => _f(17));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & get_record.1,(_f(6) & _f(7) => _f(16));
_f(1) & _f(2) & Initialisation.3,(_f(3) & _f(4) & _f(5) & _f(6) & _f(11) => _f(12));
_f(1) & _f(2) & Initialisation.2,(_f(3) & _f(4) & _f(5) & _f(6) & _f(9) => _f(10));
_f(1) & _f(2) & Initialisation.1,(_f(3) & _f(4) & _f(5) & _f(6) & _f(7) => _f(8))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
((max_rec) : ((NAT-{0})));
record$2 : ((0) .. (4)) +-> ((0) .. (10000));
dom(record$2) = ((0) .. (4));
((record$2) : (((((0) .. (4))) --> (((0) .. (10000))))));
"Refinement is correct";
"Check invariant ((name$1) : (NAT))";
((0) : (NAT));
"Check invariant ((name$1) : (((0) .. (size(bfile$1)))))";
((0) : (((0) .. (size({})))));
"Check invariant ((buffer$1) = ((({0}) <<| ({((name$1) |-> (record$1))}))))";
(({}) = ((({0}) <<| ({((0) |-> (record$2))}))));
bfile : NAT +-> ((((0) .. (4))) --> (((0) .. (10000)))) & dom(bfile) = NAT & ((bfile) : (((NAT) --> (((((0) .. (4))) --> (((0) .. (10000)))))))) & bfile : NATURAL-{0} +-> ((((0) .. (4))) --> (((0) .. (10000)))) & ((bfile) : (seq(((((0) .. (4))) --> (((0) .. (10000))))))) & buffer : NAT +-> ((((0) .. (4))) --> (((0) .. (10000)))) & dom(buffer) = NAT & ((buffer) : (((NAT) --> (((((0) .. (4))) --> (((0) .. (10000)))))))) & ((buffer) : (((dom(bfile)) +-> (((((0) .. (4))) --> (((0) .. (10000)))))))) & ((updated) : (BOOL)) & ((((updated) = (FALSE))) => (buffer : POW( bfile))) & ((((updated) = (TRUE))) => (not(buffer = {})));
((name$1) : (NAT)) & ((name$1) : (((0) .. (size(bfile$1))))) & record$1 : ((0) .. (4)) +-> ((0) .. (10000)) & dom(record$1) = ((0) .. (4)) & ((record$1) : (((((0) .. (4))) --> (((0) .. (10000)))))) & ((buffer$1) = ((({0}) <<| ({((name$1) |-> (record$1))})))) & ((bfile) = (bfile$1)) & ((buffer) = (buffer$1)) & ((updated) = (updated$1));
((oo) : ((NAT-{0}))) & ((oo) : (dom(bfile)));
((oo) : (NAT));
((oo) : (((0) .. (size(bfile$1)))));
"Check invariant ((record$1) : (((((0) .. (4))) --> (((0) .. (10000))))))";
(((bfile$1 )(oo)) : (((((0) .. (4))) --> (((0) .. (10000))))));
((buffer$1) = ((({0}) <<| ({((oo) |-> ((bfile$1 )(oo)))}))));
"Check invariant ((buffer) = (buffer$1))";
(({((oo) |-> ((bfile )(oo)))}) = (buffer$1));
((updated) = (TRUE));
((name$1) : (((0) .. (size(((bfile$1) <+ ({((name$1) |-> (record$1))})))))));
"Check invariant ((bfile) = (bfile$1))";
((((bfile) <+ (buffer))) = (((bfile$1) <+ ({((name$1) |-> (record$1))}))));
((vv) : (((0) .. (10000)))) & not(size(bfile) = max_rec);
((vv) : (((0) .. (10000)))) & not(size(bfile) = max_rec) & ((oo) = (oo$1));
((name$1) : (((0) .. (size(((bfile$1) <- ((((0) .. (4)) * {vv}))))))));
((((bfile) <- ((((0) .. (4)) * {vv})))) = (((bfile$1) <- ((((0) .. (4)) * {vv})))));
(((size(bfile) + 1)) = ((size(bfile$1) + 1)));
((oo) : ((NAT-{0}))) & ((oo) : (((1) .. (size(bfile)))));
((oo) : ((NAT-{0}))) & ((oo) : (((1) .. (size(bfile))))) & ((vv) = (vv$1));
((bool(not(oo : dom(buffer)))) = (bool(not(name$1 = oo))));
((oo) : ((NAT-{0}))) & ((oo) : (dom(buffer))) & ((ii) : (((0) .. (4)))) & ((vv) : (((0) .. (10000))));
((((record$1) <+ ({((ii) |-> (vv))}))) : (((((0) .. (4))) --> (((0) .. (10000))))));
((buffer$1) = ((({0}) <<| ({((name$1) |-> (((record$1) <+ ({((ii) |-> (vv))}))))}))));
((((buffer) <+ ({((oo) |-> ((((buffer )(oo)) <+ ({((ii) |-> (vv))}))))}))) = (buffer$1));
((vv) = (vv$1));
((size(bfile)) = (size(bfile$1)));
((oo) : ((NAT-{0}))) & ((oo) : (dom(buffer))) & ((ii) : (((0) .. (4))));
"Precondition can be deduced";
((oo) : (dom(buffer$1)));
((oo) : ((NAT-{0}))) & ((oo) : (dom(buffer))) & ((ii) : (((0) .. (4)))) & ((vv) = (vv$1));
((((buffer )(oo) )(ii)) = (((buffer$1 )(oo) )(ii)));
((buffer) = (buffer$1));
((bfile) = (bfile$1));
((buffer$1) = ((({0}) <<| ({((name$1) |-> (record$1))}))));
record$1 : ((0) .. (4)) +-> ((0) .. (10000));
dom(record$1) = ((0) .. (4));
((record$1) : (((((0) .. (4))) --> (((0) .. (10000))))));
((name$1) : (((0) .. (size(bfile$1)))));
((name$1) : (NAT));
"Well definedness";
((bfile$1) : (seq(ran(bfile$1))));
((oo) : (dom(bfile$1)));
((bfile$1) : (((dom(bfile$1)) +-> (ran(bfile$1)))));
((oo) : ((NAT-{0})));
((oo) : ((NAT-{0}))) & ((oo) : (dom(buffer))) & ((ii) : (((0) .. (4)))) & ((oo) : ((NAT-{0}))) & ((oo) : (dom(buffer$1))) & ((ii) : (((0) .. (4))));
((buffer$1) : (((dom(buffer$1)) +-> (ran(buffer$1)))));
((ii) : (dom((buffer$1 )(oo))));
(((buffer$1 )(oo)) : (((dom((buffer$1 )(oo))) +-> (ran((buffer$1 )(oo))))))
END
&
THEORY EnumerateX
END
