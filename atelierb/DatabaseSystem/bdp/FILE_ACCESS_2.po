THEORY ProofList IS
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(53) & WellDefinedness_val_buffer.4,(_f(62) => _f(67));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(53) & WellDefinedness_val_buffer.3,(_f(62) => _f(55));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(53) & WellDefinedness_val_buffer.2,(_f(62) => _f(66));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(53) & WellDefinedness_val_buffer.1,(_f(62) => _f(49));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & WellDefinedness_size_file.1,(_f(62) => _f(64));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(36) & WellDefinedness_create_record.4,(_f(62) => _f(65));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(36) & WellDefinedness_create_record.3,(_f(18) => _f(40));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(36) & WellDefinedness_create_record.2,(_f(62) => _f(64));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(36) & WellDefinedness_create_record.1,(_f(38) & _f(62) => _f(64));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(15) & WellDefinedness_get_record.3,(_f(18) => _f(19));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(15) & WellDefinedness_get_record.2,(_f(62) => _f(63));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(15) & WellDefinedness_get_record.1,(_f(62) => _f(20));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(45) & val_buffer.1,(_f(16) & _f(49) & _f(50) & _f(16) & _f(49) & _f(50) & _f(54) => _f(55));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(45) & size_file.1,(_f(21) => _f(52));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & mod_buffer.1,(_f(16) & _f(49) & _f(50) & _f(38) & _f(21) & _f(22) => _f(51));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(45) & not_in_buffer.1,(_f(16) & _f(46) & _f(21) => _f(47));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(37) & create_record.4,(_f(38) & _f(39) & _f(21) => _f(43));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(37) & create_record.3,(_f(38) & _f(39) & _f(21) & _f(34) => _f(42));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(37) & create_record.2,(_f(38) & _f(39) & _f(21) & _f(32) => _f(41));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & _f(37) & create_record.1,(_f(38) & _f(39) & _f(18) => _f(40));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & put_buffer.4,(_f(29) & _f(21) & _f(34) => _f(35));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & put_buffer.3,(_f(29) & _f(21) & _f(32) => _f(33));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & put_buffer.2,(_f(29) & _f(18) => _f(31));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & put_buffer.1,(_f(29) & _f(18) => _f(30));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & get_record.5,(_f(16) & _f(17) & _f(21) & _f(26) => _f(27));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & get_record.4,(_f(16) & _f(17) & _f(21) & _f(24) => _f(25));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & get_record.3,(_f(16) & _f(17) & _f(21) & _f(22) => _f(23));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & get_record.2,(_f(16) & _f(17) & _f(18) => _f(20));
_f(1) & _f(2) & _f(3) & _f(13) & _f(14) & get_record.1,(_f(16) & _f(17) & _f(18) => _f(19))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
((max_rec) : ((NAT-{0})));
buf_vrb$1 : ((0) .. (4)) +-> ((0) .. (10000)) & dom(buf_vrb$1) = ((0) .. (4)) & ((buf_vrb$1) : (((((0) .. (4))) --> (((0) .. (10000)))))) & file_vrb$1 : NAT +-> ((((0) .. (4))) --> (((0) .. (10000)))) & dom(file_vrb$1) = NAT & ((file_vrb$1) : (((NAT) --> (((((0) .. (4))) --> (((0) .. (10000)))))))) & file_vrb$1 : NATURAL-{0} +-> ((((0) .. (4))) --> (((0) .. (10000)))) & ((file_vrb$1) : (seq(((((0) .. (4))) --> (((0) .. (10000))))))) & (size(file_vrb$1) +1 <= max_rec);
buf_vrb$2 : ((0) .. (4)) +-> ((0) .. (10000));
dom(buf_vrb$2) = ((0) .. (4));
((buf_vrb$2) : (((((0) .. (4))) --> (((0) .. (10000))))));
{} : NAT +-> ((((0) .. (4))) --> (((0) .. (10000))));
dom({}) = NAT;
(({}) : (((NAT) --> (((((0) .. (4))) --> (((0) .. (10000))))))));
{} : NATURAL-{0} +-> ((((0) .. (4))) --> (((0) .. (10000))));
(({}) : (seq(((((0) .. (4))) --> (((0) .. (10000)))))));
(size({}) +1 <= max_rec);
((name) : (NAT)) & ((name) : (((0) .. (size(bfile))))) & record : ((0) .. (4)) +-> ((0) .. (10000)) & dom(record) = ((0) .. (4)) & ((record) : (((((0) .. (4))) --> (((0) .. (10000)))))) & ((buffer) = ((({0}) <<| ({((name) |-> (record))})))) & bfile : NAT +-> ((((0) .. (4))) --> (((0) .. (10000)))) & dom(bfile) = NAT & ((bfile) : (((NAT) --> (((((0) .. (4))) --> (((0) .. (10000)))))))) & bfile : NATURAL-{0} +-> ((((0) .. (4))) --> (((0) .. (10000)))) & ((bfile) : (seq(((((0) .. (4))) --> (((0) .. (10000))))))) & buffer : NAT +-> ((((0) .. (4))) --> (((0) .. (10000)))) & dom(buffer) = NAT & ((buffer) : (((NAT) --> (((((0) .. (4))) --> (((0) .. (10000)))))))) & ((buffer) : (((dom(bfile)) +-> (((((0) .. (4))) --> (((0) .. (10000)))))))) & ((updated) : (BOOL)) & ((((updated) = (FALSE))) => (buffer : POW( bfile))) & ((((updated) = (TRUE))) => (not(buffer = {})));
((record$1) = (buf_vrb$1)) & ((bfile$1) = (file_vrb$1)) & ((name) = (name$1)) & ((record) = (record$1)) & ((bfile) = (bfile$1)) & ((buffer) = (buffer$1)) & ((updated) = (updated$1));
((oo) : ((NAT-{0}))) & ((oo) : (dom(bfile)));
((oo) : ((NAT-{0})));
((oo) : (dom(bfile$1)));
"Precondition predicate";
((1) : (NAT));
((1) : (dom(file_vrb$1)));
"Refinement is correct";
"Check invariant ((record$1) = (buf_vrb$1))";
((record$1) = ((file_vrb$1 )(1)));
"Check invariant ((name) = (name$1))";
((oo) = (1));
"Check invariant ((record) = (record$1))";
(((bfile$1 )(oo)) = (record$1));
((updated) = (TRUE));
((updated$1) = (TRUE));
((name$1) : (NAT));
((name$1) : (dom(file_vrb$1)));
"Check invariant ((bfile$1) = (file_vrb$1))";
((bfile$1) = (((file_vrb$1) <+ ({((name$1) |-> (buf_vrb$1))}))));
"Check invariant ((bfile) = (bfile$1))";
((((bfile$1) <+ ({((name$1) |-> (record$1))}))) = (bfile$1));
((vv) : (((0) .. (10000)))) & not(size(bfile) = max_rec);
((oo$1) = (oo));
((vv) : (((0) .. (10000))));
not(size(bfile$1) = max_rec);
not(size(file_vrb$1) = max_rec);
((bfile$1) = (((file_vrb$1) <- ((((0) .. (4)) * {vv})))));
((((bfile$1) <- ((((0) .. (4)) * {vv})))) = (bfile$1));
((size(((file_vrb$1) <- ((((0) .. (4)) * {vv}))))) = ((size(bfile$1) + 1)));
((oo) : ((NAT-{0}))) & ((oo) : (((1) .. (size(bfile)))));
((vv$1) = (vv));
((oo) : (((1) .. (size(bfile$1)))));
((bool(not(oo = name$1))) = (bool(not(name$1 = oo))));
((oo) : ((NAT-{0}))) & ((oo) : (dom(buffer))) & ((ii) : (((0) .. (4)))) & ((vv) : (((0) .. (10000))));
((oo) : (dom(buffer$1)));
((ii) : (((0) .. (4))));
((((record$1) <+ ({((ii) |-> (vv))}))) = (buf_vrb$1));
((size(file_vrb$1)) = (size(bfile$1)));
((oo) : ((NAT-{0}))) & ((oo) : (dom(buffer))) & ((ii) : (((0) .. (4)))) & ((oo) : ((NAT-{0}))) & ((oo) : (dom(buffer))) & ((ii) : (((0) .. (4))));
"Instruction Well Definess";
((ii) : (dom((buffer$1 )(oo))));
((buffer) = (buffer$1));
((bfile) = (bfile$1));
((record) = (record$1));
((name) = (name$1));
((bfile$1) = (file_vrb$1));
((record$1) = (buf_vrb$1));
"Well definedness";
((file_vrb$1) : (((dom(file_vrb$1)) +-> (ran(file_vrb$1)))));
((file_vrb$1) : (seq(ran(file_vrb$1))));
((((file_vrb$1) <- ((((0) .. (4)) * {vv})))) : (seq(ran(((file_vrb$1) <- ((((0) .. (4)) * {vv})))))));
((buffer$1) : (((dom(buffer$1)) +-> (ran(buffer$1)))));
(((buffer$1 )(oo)) : (((dom((buffer$1 )(oo))) +-> (ran((buffer$1 )(oo))))))
END
&
THEORY EnumerateX
END
